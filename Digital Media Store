--1.Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT
CustomerId
,FirstName
,LastName
,Country
FROM customers
WHERE Country <>'USA'
--2.Show only the Customers from Brazil.
SELECT
CustomerId
,FirstName
,LastName
,Country
FROM customers
WHERE Country ='Brazil';
--3.Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT
invoices.CustomerId
,invoices.invoiceId
,invoices.InvoiceDate
,invoices.BillingCountry
,customers.FirstName
,customers.LastName
FROM invoices
INNER JOIN customers
ON invoices.CustomerId = customers.CustomerId
WHERE invoices.BillingCountry = 'Brazil';
--4.Show the Employees who are Sales Agents. 
SELECT
LastName
,FirstName
,Title
FROM employees
WHERE Title = 'Sales Agent';
--5.Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices;

--6.Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT
invoices.InvoiceId
,customers.CustomerId
,customers.SupportRepId
,employees.EmployeeId
,employees.FirstName
,employees.LastName
FROM invoices
Left join customers
ON invoices.CustomerId=customers.CustomerId
Left join employees
ON customers.SupportRepId=employees.employeeId
ORDER BY employees.EmployeeId
--7.Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT
employees.EmployeeId
,employees.FirstName
,employees.LastName
,invoices.Total
,invoices.InvoiceId
,customers.Country
,customers.FirstName
,customers.LastName
FROM employees
LEFT JOIN customers
ON customers.SupportRepId = employees.EmployeeId
LEFT JOIN invoices
ON invoices.CustomerId = customers.CustomerId
WHERE InvoiceId>0

--8.How many Invoices were there in 2009?
SELECT COUNT(InvoiceDate)
FROM invoices
WHERE InvoiceDate like '2009%';
--9.What are the total sales for 2009?
SELECT
SUM(Total)AS TotalSales2009
FROM invoices
WHERE InvoiceDate like '2009%';

--9 Write a query that includes the purchased track name with each invoice line ID.
SELECT
invoices.InvoiceID
,tracks.Name
FROM invoices
Left Join invoice_items
On invoice_items.InvoiceId=invoices.InvoiceId
Left Join tracks
ON tracks.Trackid=invoice_items.TrackId;

--10.Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT
invoices.InvoiceId
,tracks.Name AS TrackName
,artists.Name AS ArtistName
FROM invoices
JOIN invoice_items
ON invoices.InvoiceId = invoice_items.InvoiceId
JOIN tracks
ON invoice_items.TrackId = tracks.TrackId
JOIN albums
ON tracks.AlbumId = albums.AlbumId
JOIN artists
ON albums.ArtistId = artists.ArtistId
ORDER BY invoices.InvoiceId;

--11.Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT
tracks.Name
,albums.Title
,media_types.name as Media_Type
,genres.name as Genres
FROM tracks
LEFT JOIN albums
ON tracks.AlbumId=albums.AlbumId
Left Join media_types
On tracks.MediaTypeId=media_types.MediaTypeId
Left Join genres
On tracks.GenreId=genres.GenreId;
--12.Show the total sales made by each sales agent.
SELECT
employees.EmployeeId
,employees.FirstName
,employees.LastName
,SUM(invoices.Total) AS TotalSales
FROM employees
LEFT JOIN customers AS c1
ON c1.SupportRepId = employees.EmployeeId
LEFT JOIN invoices
ON invoices.CustomerId = c1.CustomerId
GROUP BY employees.EmployeeId, employees.FirstName, employees.LastName
HAVING TotalSales > 0 
ORDER BY TotalSales DESC;

--13.Which sales agent made the most dollars in sales in 2009?
SELECT
employees.EmployeeId
,employees.FirstName
,employees.LastName
,invoices.Total
FROM employees
LEFT JOIN customers AS c1
ON c1.SupportRepId = employees.EmployeeId
LEFT JOIN invoices
ON invoices.CustomerId = c1.CustomerId
WHERE InvoiceDate LIKE '2009%'
ORDER BY invoices.Total DESC
LIMIT 1;

--14.list of the 20 longest tracks in your database, sorted by duration in descending order.
SELECT
TrackId
,Name
,Milliseconds
FROM tracks
ORDER BY Milliseconds DESC
LIMIT 20;

